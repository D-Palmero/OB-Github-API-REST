{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repos = _ref => {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url.slice(0, -6));\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: console.log(commits)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repos, \"MDPvwMus/3sAH8A2a+RvQUDtALY=\");\n\n_c = Repos;\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repos.js"],"names":["React","useState","useEffect","Repos","url","commits","setCommits","result","fetch","slice","repos","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMK,MAAM,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAD,CAA1B;AACH,YAAMC,KAAK,GAAG,MAAMH,MAAM,CAACI,IAAP,EAApB;AACGL,MAAAA,UAAU,CAACI,KAAD,CAAV;AACH,KAJD;AAKH,GANQ,EAMN,CAACN,GAAD,CANM,CAAT;AAQA,sBACI;AAAA,cACKQ,OAAO,CAACC,GAAR,CAAYR,OAAZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;GAAMF,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Repos = ({ url }) => {\n    const [commits, setCommits] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url.slice(0, -6))\n\t        const repos = await result.json()\n            setCommits(repos)\n        })()\n    }, [url])\n\n    return(\n        <div>\n           { console.log(commits) }\n        </div>\n    )\n}\n\n\nexport default Repos"]},"metadata":{},"sourceType":"module"}