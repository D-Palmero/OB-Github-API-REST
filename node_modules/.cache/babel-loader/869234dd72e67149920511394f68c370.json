{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = _ref => {\n  _s();\n\n  let {\n    user,\n    getReady,\n    token\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(`https://api.github.com/users/${user}/repos`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setRepositories(repos);\n    })();\n  }, [user, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: repositories.length > 0 ? /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"primary\",\n      text: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tus repositorios son:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), repositories.map((repository, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          text: \"dark\",\n          className: \"repo\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: repository.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              className: \"repo-link\",\n              href: repository.html_url,\n              children: \"See on Github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"repo-button\",\n              onClick: getReady(repository.commits_url.slice(0, -6), repository.name, repository.default_branch, false),\n              children: \"See commits!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Repositories, \"SjXVpbIFIBMHldJSFeEzuicQIZY=\");\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","useState","useEffect","Button","Card","Repositories","user","getReady","token","repositories","setRepositories","result","fetch","headers","Authorization","repos","json","length","map","repository","index","name","html_url","commits_url","slice","default_branch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;;AAEA,MAAMC,YAAY,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;AACnD,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CACR,MAAM;AACL,KAAC,YAAY;AACZ,YAAMS,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,IAAK,QAAtC,EAA+C;AACxEO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAD+D,OAA/C,CAA1B;AAGA,YAAMO,KAAK,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAApB;AAEAN,MAAAA,eAAe,CAACK,KAAD,CAAf;AACA,KAPD;AAQA,GAVO,EAWR,CAAET,IAAF,EAAQE,KAAR,CAXQ,CAAT;AAcA,sBACC;AAAA,cACEC,YAAY,CAACQ,MAAb,GAAsB,CAAtB,gBACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA,8BACC,QAAC,IAAD,CAAM,MAAN;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAMER,YAAY,CAACS,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACxC,4BACC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAA8B,UAAA,SAAS,EAAC,MAAxC;AAAA,kCACC,QAAC,IAAD,CAAM,MAAN;AAAA,mCACC;AAAA,wBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC,QAAC,IAAD,CAAM,IAAN;AAAA,oCACC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,OAAhB;AAAwB,cAAA,SAAS,EAAC,WAAlC;AAA8C,cAAA,IAAI,EAAEF,UAAU,CAACG,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAIC,QAAC,MAAD;AACC,cAAA,SAAS,EAAC,aADX;AAEC,cAAA,OAAO,EAAEf,QAAQ,CAChBY,UAAU,CAACI,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CADgB,EAEhBL,UAAU,CAACE,IAFK,EAGhBF,UAAU,CAACM,cAHK,EAIhB,KAJgB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA,WAAuBL,KAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AAuBA,OAxBA,CANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnCF;AAAA;AAAA;AAAA;AAAA,UADD;AAwCA,CAzDD;;GAAMf,Y;;KAAAA,Y;AA2DN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nconst Repositories = ({ user, getReady, token }) => {\n\tconst [ repositories, setRepositories ] = useState([]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tconst result = await fetch(`https://api.github.com/users/${user}/repos`, {\n\t\t\t\t\theaders: { Authorization: token }\n\t\t\t\t});\n\t\t\t\tconst repos = await result.json();\n\n\t\t\t\tsetRepositories(repos);\n\t\t\t})();\n\t\t},\n\t\t[ user, token ]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{repositories.length > 0 ? (\n\t\t\t\t<Card bg=\"primary\" text=\"white\">\n\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<h2>Tus repositorios son:</h2>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t{repositories.map((repository, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card text=\"dark\" key={index} className=\"repo\">\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<h5>{repository.name}</h5>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"repo-link\" href={repository.html_url}>\n\t\t\t\t\t\t\t\t\t\tSee on Github\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"repo-button\"\n\t\t\t\t\t\t\t\t\t\tonClick={getReady(\n\t\t\t\t\t\t\t\t\t\t\trepository.commits_url.slice(0, -6),\n\t\t\t\t\t\t\t\t\t\t\trepository.name,\n\t\t\t\t\t\t\t\t\t\t\trepository.default_branch,\n\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSee commits!\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Card>\n\t\t\t) : (\n\t\t\t\t<p>El usuario no tiene repositorios</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Repositories;\n"]},"metadata":{},"sourceType":"module"}