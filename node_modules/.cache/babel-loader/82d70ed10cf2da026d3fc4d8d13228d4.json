{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = _ref => {\n  _s();\n\n  let {\n    user,\n    getReady,\n    token\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(`https://api.github.com/users/${user}/repos`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setRepositories(repos);\n    })();\n  }, [user, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: repositories.length > 0 ? /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"primary\",\n      text: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tus repositorios son:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), repositories.map((repository, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          text: \"dark\",\n          className: \"repo\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: repository.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              className: \"repo-link\",\n              href: repository.html_url,\n              children: \"See on Github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"repo-button\",\n              onClick: getReady(repository.commits_url.slice(0, -6), repository.name, repository.default_branch, false),\n              children: \"See commits!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","useState","useEffect","Button","Card","Form","Repositories","user","getReady","token","repositories","setRepositories","result","fetch","headers","Authorization","repos","json","length","map","repository","index","name","html_url","commits_url","slice","default_branch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,iBAAnC;;;AAEA,MAAMC,YAAY,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;AAChD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMU,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,IAAK,QAAtC,EAA+C;AACrEO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAD4D,OAA/C,CAA1B;AAGH,YAAMO,KAAK,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAApB;AAEGN,MAAAA,eAAe,CAACK,KAAD,CAAf;AACH,KAPD;AAQH,GATQ,EASN,CAACT,IAAD,EAAOE,KAAP,CATM,CAAT;AAWA,sBACI;AAAA,cACSC,YAAY,CAACQ,MAAb,GAAsB,CAAtB,gBACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA,8BACG,QAAC,IAAD,CAAM,MAAN;AAAA,gCAAa;AAAA;AAAA;AAAA;AAAA,gBAAb,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB,eAAgD;AAAA;AAAA;AAAA;AAAA,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEIR,YAAY,CAACS,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACrC,4BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkC,UAAA,SAAS,EAAC,MAA5C;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI;AAAA,wBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,oCACA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,OAAhB;AAAuB,cAAA,SAAS,EAAC,WAAjC;AAA6C,cAAA,IAAI,EAAIF,UAAU,CAACG,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,OAAO,EAAIf,QAAQ,CAACY,UAAU,CAACI,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAD,EAAsCL,UAAU,CAACE,IAAjD,EAAuDF,UAAU,CAACM,cAAlE,EAAkF,KAAlF,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAA0BL,KAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZA,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAkBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBC,CAtCL;;GAAMf,Y;;KAAAA,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Card, Form } from 'react-bootstrap'\n\nconst Repositories = ({ user, getReady, token }) => {\n    const [repositories, setRepositories] = useState([])\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(`https://api.github.com/users/${user}/repos`, {\n                headers: { Authorization: token }\n            })\n\t        const repos = await result.json()\n\n            setRepositories(repos)\n        })()\n    }, [user, token])\n\n    return(\n        <div>\n                {repositories.length > 0 ? \n                (<Card bg=\"primary\" text=\"white\">\n                    <Card.Header><br/><h2>Tus repositorios son:</h2><br/></Card.Header>\n                    {repositories.map((repository, index) => { \n                        return (\n                            <Card text=\"dark\" key = { index } className=\"repo\">\n                                <Card.Header>\n                                    <h5>{repository.name}</h5>\n                                </Card.Header>\n                                <Card.Body>\n                                <Button variant=\"light\"className=\"repo-link\" href = {repository.html_url}>See on Github</Button>\n                                <Button className=\"repo-button\" onClick= { getReady(repository.commits_url.slice(0, -6), repository.name, repository.default_branch, false) } >See commits!</Button>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                </Card>)\n                :\n                <p>El usuario no tiene repositorios</p>\n                }\n            </div> \n            )\n    }\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}