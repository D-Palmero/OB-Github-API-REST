{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js\";\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      repositories: [],\n      redirect: false\n    };\n\n    this.getUser = async e => {\n      const userName = e.target.elements.userName.value;\n      e.preventDefault();\n      const apiURL = await fetch(`https://api.github.com/users/${userName}/repos`);\n      const data = await apiURL.json();\n      this.setState({\n        repositories: data,\n        redirect: true\n      });\n      console.log(this.state.repositories[0]);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"App-title\",\n          children: \"Github API REST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getUser: this.getUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n        repositories: this.state.repositories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js"],"names":["render","React","Component","Form","Repositories","App","state","repositories","redirect","getUser","e","userName","target","elements","value","preventDefault","apiURL","fetch","data","json","setState","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADkB;;AAAA,SAM1BC,OAN0B,GAMhB,MAAOC,CAAP,IAAa;AACxB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBF,QAAlB,CAA2BG,KAA5C;AACAJ,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,QAAS,QAA1C,CAA1B;AAEA,YAAMO,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACA,WAAKC,QAAL,CAAe;AAAEb,QAAAA,YAAY,EAAEW,IAAhB;AAAsBV,QAAAA,QAAQ,EAAE;AAAhC,OAAf;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,YAAX,CAAwB,CAAxB,CAAZ;AACE,KAdyB;AAAA;;AAgB1BP,EAAAA,MAAM,GAAG;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,eAKD,QAAC,IAAD;AAAM,QAAA,OAAO,EAAK,KAAKS;AAAvB;AAAA;AAAA;AAAA;AAAA,cALC,eAMD,QAAC,YAAD;AAAc,QAAA,YAAY,EAAI,KAAKH,KAAL,CAAWC;AAAzC;AAAA;AAAA;AAAA;AAAA,cANC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUE;;AA3ByB;;AA8B5B,eAAeF,GAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\n\nclass App extends Component {\n  state = {\n\trepositories: [],\n\tredirect: false\n  }\n\n  getUser = async (e) => {\n\tconst userName = e.target.elements.userName.value;\n\te.preventDefault()\n\tconst apiURL = await fetch(`https://api.github.com/users/${userName}/repos`);\n\n\tconst data = await apiURL.json();\n\tthis.setState( { repositories: data, redirect: true });\n\tconsole.log(this.state.repositories[0])\n  }\n\n  render() {\n\treturn (\n\t  <div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t  <h1 className=\"App-title\">Github API REST</h1>\n\t\t</header>\n\t\t\n\t\t<Form getUser = { this.getUser }/>\n\t\t<Repositories repositories= { this.state.repositories }/>\n\t  </div>\n\t)\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}