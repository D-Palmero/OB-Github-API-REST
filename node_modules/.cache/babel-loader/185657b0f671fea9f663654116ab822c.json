{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Card, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = _ref => {\n  _s();\n\n  let {\n    user,\n    getReady,\n    token\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(`https://api.github.com/users/${user}/repos`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setRepositories(repos);\n    })();\n  }, [user, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tus repositorios son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), repositories.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories\",\n      children: repositories.map((repository, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"repo\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"repo title\",\n            children: repository.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"repo-link\",\n            href: repository.html_url,\n            children: \"See on Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"repo-button\",\n            onClick: getReady(repository.commits_url.slice(0, -6), repository.name, repository.default_branch, false),\n            children: \"See commits!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Card","Form","Repositories","user","getReady","token","repositories","setRepositories","result","fetch","headers","Authorization","repos","json","length","map","repository","index","name","html_url","commits_url","slice","default_branch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,IAA5C,QAAwD,iBAAxD;;;AAEA,MAAMC,YAAY,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;AAChD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMa,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,IAAK,QAAtC,EAA+C;AACrEO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAD4D,OAA/C,CAA1B;AAGH,YAAMO,KAAK,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAApB;AAEGN,MAAAA,eAAe,CAACK,KAAD,CAAf;AACH,KAPD;AAQH,GATQ,EASN,CAACT,IAAD,EAAOE,KAAP,CATM,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAESC,YAAY,CAACQ,MAAb,GAAsB,CAAtB,gBACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACIR,YAAY,CAACS,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACrC,4BACI,QAAC,IAAD;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,YAAtB;AAAA,sBAAoCD,UAAU,CAACE;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,SAAS,EAAC,WAAtC;AAAkD,YAAA,IAAI,EAAIF,UAAU,CAACG,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAIf,QAAQ,CAACY,UAAU,CAACI,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAD,EAAsCL,UAAU,CAACE,IAAjD,EAAuDF,UAAU,CAACM,cAAlE,EAAkF,KAAlF,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAcL,KAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,gBAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBC,CAlCL;;GAAMf,Y;;KAAAA,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Card, Form } from 'react-bootstrap'\n\nconst Repositories = ({ user, getReady, token }) => {\n    const [repositories, setRepositories] = useState([])\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(`https://api.github.com/users/${user}/repos`, {\n                headers: { Authorization: token }\n            })\n\t        const repos = await result.json()\n\n            setRepositories(repos)\n        })()\n    }, [user, token])\n\n    return(\n        <div>\n            <h3>Tus repositorios son:</h3>\n                {repositories.length > 0 ? \n                (<div className=\"repositories\">\n                    {repositories.map((repository, index) => { \n                        return (\n                            <Card key = { index } className=\"repo\">\n                                <Card.Title className=\"repo title\">{repository.name}</Card.Title>\n                                <Button variant=\"secondary\" className=\"repo-link\" href = {repository.html_url}>See on Github</Button>\n                                <Button className=\"repo-button\" onClick= { getReady(repository.commits_url.slice(0, -6), repository.name, repository.default_branch, false) } >See commits!</Button>\n                            </Card>\n                        )\n                    })}\n                </div>)\n                :\n                <p>El usuario no tiene repositorios</p>\n                }\n            </div> \n            )\n    }\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}