{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Lines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lines = _ref => {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [file, setFile] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url);\n      const repos = await result.text();\n      setFile(repos);\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: file.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [(file.match(/\\n/g) || '').length, \" l\\xEDneas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No se pudieron contar las l\\xEDneas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Lines, \"9SQmYP8ugyAD6A16Br3TYtifhUs=\");\n\n_c = Lines;\nexport default Lines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lines\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Lines.js"],"names":["React","useState","useEffect","Lines","url","file","setFile","result","fetch","repos","text","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMK,MAAM,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA1B;AACH,YAAMK,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AAEGJ,MAAAA,OAAO,CAACG,KAAD,CAAP;AACH,KALD;AAMH,GAPQ,EAON,CAACL,GAAD,CAPM,CAAT;AASA,sBACK;AAAA,cACKC,IAAI,CAACM,MAAL,GAAc,CAAd,gBACE;AAAA,6BACA;AAAA,mBAAM,CAACN,IAAI,CAACO,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0BD,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,gBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANP;AAAA;AAAA;AAAA;AAAA,UADL;AAWH,CAvBD;;GAAMR,K;;KAAAA,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Lines = ({ url }) => {\n    const [file, setFile] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url)\n\t        const repos = await result.text()\n            \n            setFile(repos)\n        })()\n    }, [url])\n\n    return(\n        (<div>\n            { file.length > 0 ?\n                <div>\n                <h4>{ (file.match(/\\n/g) || '').length } líneas</h4>\n                </div>\n                :\n                <h4>No se pudieron contar las líneas</h4>\n            }\n        </div>)\n    )\n}\n\n\nexport default Lines\n\n"]},"metadata":{},"sourceType":"module"}