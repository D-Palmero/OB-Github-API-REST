{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Details from './Details';\nimport Files from \"./Files\";\nimport { Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commits = _ref => {\n  _s();\n\n  let {\n    url,\n    user,\n    repo,\n    branch,\n    getReady,\n    token\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url, token]);\n\n  const showCommits = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: commits.map((commit, index) => {\n          return /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: commit.commit.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        bg: \"primary\",\n        text: \"white\",\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Commits in \", repo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), showCommits(), /*#__PURE__*/_jsxDEV(Details, {\n        user: user,\n        repo: repo,\n        branch: branch,\n        token: token,\n        url: commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Couldn't find any repository :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getReady(\"\", \"\", \"\", true),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Commits, \"MDPvwMus/3sAH8A2a+RvQUDtALY=\");\n\n_c = Commits;\nexport default Commits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js"],"names":["React","useState","useEffect","Details","Files","Button","Card","Commits","url","user","repo","branch","getReady","token","commits","setCommits","result","fetch","headers","Authorization","repos","json","showCommits","map","commit","index","message","length","replace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;;AAEA,MAAMC,OAAO,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,GAAiD;AAC9D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMc,MAAM,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC5BU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AADmB,OAAN,CAA1B;AAGH,YAAMO,KAAK,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAApB;AAEGN,MAAAA,UAAU,CAACK,KAAD,CAAV;AACH,KAPD;AAQH,GATQ,EASN,CAACZ,GAAD,EAAMK,KAAN,CATM,CAAT;;AAWA,QAAMS,WAAW,GAAG,MAAM;AACtB,wBACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAA,kBACCR,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,8BAAO,QAAC,IAAD,CAAM,IAAN;AAAA,sBAA2BD,MAAM,CAACA,MAAP,CAAcE;AAAzC,aAAmBD,KAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFJ;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD;;AAWA,sBACI;AAAA,eACKX,OAAO,CAACa,MAAR,GAAiB,CAAjB,gBACA;AAAA,8BACO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA,+BACI,QAAC,IAAD,CAAM,MAAN;AAAA,kCAAa;AAAA;AAAA;AAAA;AAAA,kBAAb,eAAkB;AAAA,sCAAiBjB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlB,eAA8C;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADP,EAIQY,WAAW,EAJnB,eAKO,QAAC,OAAD;AAAS,QAAA,IAAI,EAAKb,IAAlB;AAAyB,QAAA,IAAI,EAAKC,IAAlC;AAAyC,QAAA,MAAM,EAAKC,MAApD;AAA6D,QAAA,KAAK,EAAKE,KAAvE;AAA+E,QAAA,GAAG,EAAKC,OAAO,CAAC,CAAD,CAAP,CAAWN,GAAX,CAAeoB,OAAf,CAAuB,SAAvB,EAAkC,WAAlC,IAAiD;AAAxI;AAAA;AAAA;AAAA;AAAA,cALP;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAUD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAaS,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAKhB,QAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,IAAb,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbT,eAcI;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3CD;;GAAML,O;;KAAAA,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Details from './Details'\nimport Files from \"./Files\";\nimport { Button, Card } from 'react-bootstrap'\n\nconst Commits = ({ url, user, repo, branch, getReady, token }) => {\n    const [commits, setCommits] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url, {\n                headers: { Authorization: token }\n            })\n\t        const repos = await result.json()\n            \n            setCommits(repos)\n        })()\n    }, [url, token])\n\n    const showCommits = () => {\n        return (\n            <Card>\n                <Card.Body>\n                {commits.map((commit, index) => {\n                    return <Card.Text key = { index}>{commit.commit.message}</Card.Text>\n                    })}\n                    </Card.Body>\n            </Card>\n        )\n    }\n    return(\n        <div>\n            {commits.length > 0 ? \n            (<div >\n                    <Card bg=\"primary\" text=\"white\">\n                        <Card.Header><br/><h2>Commits in { repo }</h2><br/></Card.Header>\n                    </Card>\n                    {showCommits()}\n                    <Details user = { user } repo = { repo } branch = { branch } token = { token } url = { commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\" }/>\n            </div> \n            )\n            :\n            <p>Couldn't find any repository :(</p>\n            }\n            <br/><Button onClick = { getReady(\"\", \"\", \"\", true)}>Go Back</Button>\n            <p></p>\n        </div>\n    )\n}\n\n\nexport default Commits"]},"metadata":{},"sourceType":"module"}