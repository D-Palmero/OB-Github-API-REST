{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = _ref => {\n  _s();\n\n  let {\n    user,\n    getReady\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(`https://api.github.com/users/${user}/repos`);\n      const repos = await result.json();\n      setRepositories(repos);\n    })();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tus repositorios son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), repositories.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: repositories.map((repository, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: repository.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repository.html_url,\n            children: \"See on Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getReady(repository.commits_url.slice(0, -6), repository.name, repository.branch),\n            children: \"See commits!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","useState","useEffect","Repositories","user","getReady","repositories","setRepositories","result","fetch","repos","json","length","map","repository","index","name","html_url","commits_url","slice","branch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,YAAY,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAuB;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMM,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BL,IAAK,QAAtC,CAA1B;AACH,YAAMM,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AAEGJ,MAAAA,eAAe,CAACG,KAAD,CAAf;AACH,KALD;AAMH,GAPQ,EAON,CAACN,IAAD,CAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAESE,YAAY,CAACM,MAAb,GAAsB,CAAtB,gBACA;AAAA,gBACIN,YAAY,CAACO,GAAb,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACrC,4BACI;AAAA,kCACI;AAAA,sBAAKD,UAAU,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,IAAI,EAAIF,UAAU,CAACG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,OAAO,EAAIZ,QAAQ,CAACS,UAAU,CAACI,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAD,EAAsCL,UAAU,CAACE,IAAjD,EAAuDF,UAAU,CAACM,MAAlE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAaL,KAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,gBAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBC,CAhCL;;GAAMZ,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Repositories = ({ user, getReady }) => {\n    const [repositories, setRepositories] = useState([])\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(`https://api.github.com/users/${user}/repos`)\n\t        const repos = await result.json()\n\n            setRepositories(repos)\n        })()\n    }, [user])\n\n    return(\n        <div>\n            <h3>Tus repositorios son:</h3>\n                {repositories.length > 0 ? \n                (<div>\n                    {repositories.map((repository, index) => { \n                        return (\n                            <div key = { index }>\n                                <h4>{repository.name}</h4>\n                                <a href = {repository.html_url}>See on Github</a>\n                                <button onClick= { getReady(repository.commits_url.slice(0, -6), repository.name, repository.branch) } >See commits!</button>\n                            </div>\n                        )\n                    })}\n                </div>)\n                :\n                <p>El usuario no tiene repositorios</p>\n                }\n            </div> \n            )\n    }\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}