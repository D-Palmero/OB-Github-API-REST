{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Commits from \"./Commits\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  const [ready, setReady] = useState(true);\n  const [url, setUrl] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(`https://api.github.com/users/${user}/repos`);\n      const repos = await result.json();\n      setRepositories(repos);\n    })();\n  }, [user]);\n\n  const getReady = commit_url => e => {\n    e.preventDefault();\n    setReady(false);\n    setUrl(commit_url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ready ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tus repositorios son:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), repositories.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: repository.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repository.html_url,\n            children: \"See on Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getReady(repository.commits_url.slice(0, -6)),\n            children: \"See commits!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El usuario no tiene repositorios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(Commits, {\n      url: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Repositories, \"zm8tn7oGb7Z9TEm+8E598KGszTw=\");\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","useState","useEffect","Commits","Repositories","user","repositories","setRepositories","ready","setReady","url","setUrl","result","fetch","repos","json","getReady","commit_url","e","preventDefault","length","map","repository","name","html_url","commits_url","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAIA,MAAMC,YAAY,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMU,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BR,IAAK,QAAtC,CAA1B;AACH,YAAMS,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AACGR,MAAAA,eAAe,CAACO,KAAD,CAAf;AACH,KAJD;AAKH,GANQ,EAMN,CAACT,IAAD,CANM,CAAT;;AAQA,QAAMW,QAAQ,GAAIC,UAAD,IAAiBC,CAAD,IAAO;AAC1CA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACME,IAAAA,MAAM,CAACM,UAAD,CAAN;AACN,GAJE;;AAKA,sBACI;AAAA,cACKT,KAAK,gBACL;AAAA,8BACG;AAAA,+BAAcH,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,EAGIC,YAAY,CAACc,MAAb,GAAsB,CAAtB,gBACA;AAAA,kBACId,YAAY,CAACe,GAAb,CAAiBC,UAAU,iBAC5B;AAAA,kCACI;AAAA,sBAAKA,UAAU,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,IAAI,EAAID,UAAU,CAACE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,OAAO,EAAIR,QAAQ,CAACM,UAAU,CAACG,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,gBAWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAoBN,QAAC,OAAD;AAAS,MAAA,GAAG,EAAKhB;AAAjB;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA5CD;;GAAMN,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Commits from \"./Commits\";\n\n\n\nconst Repositories = ({ user }) => {\n    const [repositories, setRepositories] = useState([])\n    const [ready, setReady] = useState(true)\n    const [url, setUrl] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(`https://api.github.com/users/${user}/repos`)\n\t        const repos = await result.json()\n            setRepositories(repos)\n        })()\n    }, [user])\n\n    const getReady = (commit_url) => (e) => {\n\t\te.preventDefault()\n\t\tsetReady(false)\n        setUrl(commit_url)\n\t}\n    return(\n        <div>\n            {ready ? \n            (<div>\n                <h1>Welcome { user }</h1>\n                <h3>Tus repositorios son:</h3>\n                {repositories.length > 0 ? \n                (<div>\n                    {repositories.map(repository => \n                    <div>\n                        <h4>{repository.name}</h4>\n                        <a href = {repository.html_url}>See on Github</a>\n                        <button onClick= { getReady(repository.commits_url.slice(0, -6)) } >See commits!</button>\n                    </div>)}\n                </div> \n                )\n                :\n                <p>El usuario no tiene repositorios</p>\n                }\n            </div> \n            )\n            :\n            <Commits url = { url }/>\n            }\n        </div>\n    )\n}\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}