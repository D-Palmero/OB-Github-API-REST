{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js\";\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Repository from './components/Repository';\nimport Repositories from './components/Repositories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      repositories: [],\n      commits: []\n    };\n\n    this.getUser = async e => {\n      const userName = e.target.elements.userName.value;\n      e.preventDefault();\n      fetch(`https://api.github.com/users/${userName}/repos`).then(response => response.json()).then(repositories => {\n        this.setState({\n          repositories: repositories\n        });\n      });\n      fetch(``).then(response => response.json()).then(commits => {\n        this.setState({\n          commits: commits\n        });\n      });\n    };\n\n    this.getCommits = async e => {\n      console.log(this.state.repositories);\n      /*\n      const user = this.repository.owner.login\n      const repo = this.repository.name\n      e.preventDefault()\n      const url = `https://api.github.com/repos/${user}/${repo}/commits`\n      const commitsURL = await fetch(url);\n      const data = await commitsURL.json();\n      console.log(data)\n      this.setState( { repositories: data });\n      */\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"App-title\",\n          children: \"Github API REST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getUser: this.getUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n        repositories: this.state.repositories,\n        getCommits: this.getCommits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Repository, {\n        repository: this.state.repositories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), console.log(this.state.commits)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js"],"names":["render","React","Component","Form","Repository","Repositories","App","state","repositories","commits","getUser","e","userName","target","elements","value","preventDefault","fetch","then","response","json","setState","getCommits","console","log"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,OAAO,EAAE;AAFA,KADkB;;AAAA,SAM1BC,OAN0B,GAMhB,MAAOC,CAAP,IAAa;AACxB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBF,QAAlB,CAA2BG,KAA5C;AACAJ,MAAAA,CAAC,CAACK,cAAF;AACAC,MAAAA,KAAK,CAAE,gCAA+BL,QAAS,QAA1C,CAAL,CACIM,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESV,YAAY,IAAI;AAClB,aAAKa,QAAL,CAAe;AAAEb,UAAAA,YAAY,EAAEA;AAAhB,SAAf;AACH,OAJJ;AAKAS,MAAAA,KAAK,CAAE,EAAF,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAEST,OAAO,IAAI;AACb,aAAKY,QAAL,CAAe;AAAEZ,UAAAA,OAAO,EAAEA;AAAX,SAAf;AACH,OAJJ;AAME,KApByB;;AAAA,SAsB1Ba,UAtB0B,GAsBb,MAAOX,CAAP,IAAa;AACzBY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,YAAvB;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,KAlC2B;AAAA;;AAoC1BR,EAAAA,MAAM,GAAG;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,eAID,QAAC,IAAD;AAAM,QAAA,OAAO,EAAK,KAAKU;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJC,eAKD,QAAC,YAAD;AAAc,QAAA,YAAY,EAAI,KAAKH,KAAL,CAAWC,YAAzC;AAAwD,QAAA,UAAU,EAAK,KAAKc;AAA5E;AAAA;AAAA;AAAA;AAAA,cALC,eAMD,QAAC,UAAD;AAAY,QAAA,UAAU,EAAG,KAAKf,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,cANC,EAOAe,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAvB,CAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWE;;AAhDyB;;AAmD5B,eAAeH,GAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport Repository from './components/Repository'\nimport Repositories from './components/Repositories';\n\nclass App extends Component {\n  state = {\n\trepositories: [],\n\tcommits: []\n  }\n\n  getUser = async (e) => {\n\tconst userName = e.target.elements.userName.value;\n\te.preventDefault()\n\tfetch(`https://api.github.com/users/${userName}/repos`)\n    .then(response => response.json())\n    .then(repositories => {\n        this.setState( { repositories: repositories });\n    })\n\tfetch(``)\n    .then(response => response.json())\n    .then(commits => {\n        this.setState( { commits: commits });\n    })\n\n  }\n\n  getCommits = async (e) => {\n\t  console.log(this.state.repositories)\n\t/*\n\tconst user = this.repository.owner.login\n\tconst repo = this.repository.name\n\te.preventDefault()\n\tconst url = `https://api.github.com/repos/${user}/${repo}/commits`\n\tconst commitsURL = await fetch(url);\n\tconst data = await commitsURL.json();\n\tconsole.log(data)\n\tthis.setState( { repositories: data });\n\t*/\n}\n\n  render() {\n\treturn (\n\t  <div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t  <h1 className=\"App-title\">Github API REST</h1>\n\t\t</header>\n\t\t<Form getUser = { this.getUser }/>\n\t\t<Repositories repositories= { this.state.repositories } getCommits = { this.getCommits }/>\n\t\t<Repository repository= {this.state.repositories}/>\n\t\t{console.log(this.state.commits)}\n\t  </div>\n\t)\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}