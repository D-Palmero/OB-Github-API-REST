{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Lines from './Lines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Files = _ref => {\n  _s();\n\n  let {\n    content\n  } = _ref;\n  const [file, setFile] = useState('');\n\n  const showFiles = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content.tree.map((file, index) => {\n        const color = file.type === 'tree' ? 'primary' : 'light';\n        const textColor = file.type === 'tree' ? 'white' : 'dark';\n        return /*#__PURE__*/_jsxDEV(Card, {\n          bg: color,\n          text: textColor,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: file.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: showLines(file)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: file.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [(file.match(/\\n/g) || '').length, \" l\\xEDneas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No se pudieron contar las l\\xEDneas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Files, \"/SmNmjDoumUiEkzuR1JCDE2sF2Q=\");\n\n_c = Files;\nexport default Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js"],"names":["React","useState","useEffect","Card","Lines","Files","content","file","setFile","showFiles","tree","map","index","color","type","textColor","path","showLines","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACpB,wBACI;AAAA,gBACCH,OAAO,CAACI,IAAR,CAAaC,GAAb,CAAiB,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAC/B,cAAMC,KAAK,GAAIN,IAAI,CAACO,IAAL,KAAc,MAAd,GAAuB,SAAvB,GAAmC,OAAlD;AACA,cAAMC,SAAS,GAAIR,IAAI,CAACO,IAAL,KAAc,MAAd,GAAuB,OAAvB,GAAiC,MAApD;AACA,4BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAGD,KAAX;AAAmB,UAAA,IAAI,EAAEE,SAAzB;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAeR,IAAI,CAACS;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAaC,SAAS,CAACV,IAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAKA,OARH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAiBA,sBACK;AAAA,cACKA,IAAI,CAACW,MAAL,GAAc,CAAd,gBACE,QAAC,IAAD,CAAM,IAAN;AAAA,iBAAa,CAACX,IAAI,CAACY,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0BD,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJP;AAAA;AAAA;AAAA;AAAA,UADL;AASH,CA7BD;;GAAMb,K;;KAAAA,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Lines from './Lines'\n\nconst Files = ({ content}) => {\n    const [file, setFile] = useState('')\n\n    const showFiles = () => {\n        return (\n            <div>\n            {content.tree.map((file, index) => {\n                const color = (file.type === 'tree' ? 'primary' : 'light')\n                const textColor = (file.type === 'tree' ? 'white' : 'dark')\n                return (\n                <Card bg={ color } text={textColor}>\n                    <Card.Header>{ file.path }</Card.Header>\n                    <Card.Text>{ showLines(file)}</Card.Text>\n                </Card>\n              )})}\n              </div>\n        )\n\n    }\n    \n    return(\n        (<div>\n            { file.length > 0 ?\n                <Card.Text>{ (file.match(/\\n/g) || '').length } líneas</Card.Text>\n                :\n                <h4>No se pudieron contar las líneas</h4>\n            }\n        </div>)\n    )\n}\n\n\nexport default Files"]},"metadata":{},"sourceType":"module"}