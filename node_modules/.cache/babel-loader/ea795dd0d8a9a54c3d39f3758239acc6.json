{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Details from './Details';\nimport { Container, Row, Col, Button, Card, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commits = _ref => {\n  _s();\n\n  let {\n    url,\n    user,\n    repo,\n    branch,\n    token\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  const [ready, setReady] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url, token]);\n\n  const getReady = e => {};\n\n  const showCommits = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: commits.map((commit, index) => {\n          return /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: commit.commit.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        bg: \"primary\",\n        text: \"white\",\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Commits in \", repo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), showCommits(), /*#__PURE__*/_jsxDEV(Details, {\n        user: user,\n        repo: repo,\n        branch: branch,\n        token: token,\n        url: commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"repo-button\",\n        onClick: setReady,\n        children: \"See Files!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Couldn't find any repository :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getReady(\"\", \"\", \"\", true),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Commits, \"ox+O1yODsL4FPZOMuOxma+2wzoc=\");\n\n_c = Commits;\nexport default Commits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js"],"names":["React","useState","useEffect","Details","Container","Row","Col","Button","Card","Form","Commits","url","user","repo","branch","token","commits","setCommits","ready","setReady","result","fetch","headers","Authorization","repos","json","getReady","e","showCommits","map","commit","index","message","length","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Details from './Details'\nimport { Container, Row, Col, Button, Card, Form } from 'react-bootstrap'\n\nconst Commits = ({ url, user, repo, branch, token }) => {\n    const [commits, setCommits] = useState('')\n    const [ready, setReady] = useState(true)\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url, {\n                headers: { Authorization: token }\n            })\n\t        const repos = await result.json()\n            \n            setCommits(repos)\n        })()\n    }, [url, token])\n\n    const getReady = (e) => {\n\n    }\n    const showCommits = () => {\n        return (\n            <Card>\n                <Card.Body>\n                {commits.map((commit, index) => {\n                    return <Card.Text key = { index}>{commit.commit.message}</Card.Text>\n                    })}\n                    </Card.Body>\n            </Card>\n        )\n    }\n    return(\n        <div>\n            {commits.length > 0 ? \n            (<div >\n                    <Card bg=\"primary\" text=\"white\">\n                        <Card.Header><br/><h2>Commits in { repo }</h2><br/></Card.Header>\n                    </Card>\n                    {showCommits()}\n                    <Details user = { user } repo = { repo } branch = { branch } token = { token } url = { commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\" }/>\n                    <Button className=\"repo-button\" onClick= { setReady } >See Files!</Button>\n            </div> \n            )\n            :\n            <p>Couldn't find any repository :(</p>\n            }\n            <button onClick = { getReady(\"\", \"\", \"\", true)}>Back</button>\n        </div>\n    )\n}\n\n\nexport default Commits"]},"metadata":{},"sourceType":"module"}