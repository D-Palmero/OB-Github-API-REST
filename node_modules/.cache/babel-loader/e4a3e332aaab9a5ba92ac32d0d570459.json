{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Details from './Details';\nimport { Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commits = _ref => {\n  _s();\n\n  let {\n    url,\n    user,\n    repo,\n    branch,\n    getReady,\n    token\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url, token]);\n\n  const showCommits = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: commits.map((commit, index) => {\n            return /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: commit.commit.message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"primary\",\n          text: \"white\",\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Commits in \", repo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showCommits()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Details, {\n          user: user,\n          repo: repo,\n          branch: branch,\n          token: token,\n          url: commits[0].url.replace('commits', 'git/trees') + '?recursive=1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Couldn't find any repository :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getReady('', '', '', true),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Commits, \"xkfl1pCzBtkqjakle9CRH0TzXN8=\");\n\n_c = Commits;\nexport default Commits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js"],"names":["React","useState","useEffect","Details","Button","Card","Commits","url","user","repo","branch","getReady","token","commits","setCommits","result","fetch","headers","Authorization","repos","json","showCommits","map","commit","index","message","length","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Details from './Details';\nimport { Button, Card } from 'react-bootstrap';\n\nconst Commits = ({ url, user, repo, branch, getReady, token }) => {\n\tconst [ commits, setCommits ] = useState('');\n\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tconst result = await fetch(url, {\n\t\t\t\t\theaders: { Authorization: token }\n\t\t\t\t});\n\t\t\t\tconst repos = await result.json();\n\n\t\t\t\tsetCommits(repos);\n\t\t\t})();\n\t\t},\n\t\t[ url, token ]\n\t);\n\n\tconst showCommits = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t{commits.map((commit, index) => {\n\t\t\t\t\t\t\treturn <Card.Text key={index}>{commit.commit.message}</Card.Text>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t{commits.length > 0 ? (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Card bg=\"primary\" text=\"white\">\n\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<h2>Commits in {repo}</h2>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>{showCommits()}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Details\n\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\trepo={repo}\n\t\t\t\t\t\t\tbranch={branch}\n\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\turl={commits[0].url.replace('commits', 'git/trees') + '?recursive=1'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>Couldn't find any repository :(</p>\n\t\t\t)}\n\t\t\t<br />\n\t\t\t<Button onClick={getReady('', '', '', true)}>Go Back</Button>\n\t\t\t<p />\n\t\t</div>\n\t);\n};\n\nexport default Commits;\n"]},"metadata":{},"sourceType":"module"}