{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js\";\nimport React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Lines from './Lines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Files = _ref => {\n  let {\n    content,\n    repo,\n    user,\n    branch\n  } = _ref;\n\n  const showFiles = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content.tree.map((file, index) => {\n        const color = file.type === 'tree' ? 'info' : 'light';\n        const textColor = file.type === 'tree' ? 'white' : 'dark';\n        return /*#__PURE__*/_jsxDEV(Card, {\n          bg: color,\n          text: textColor,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: file.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: showLines(file)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  };\n\n  const showLines = file => {\n    if (file.type === 'blob') return /*#__PURE__*/_jsxDEV(Lines, {\n      url: getUrl(file),\n      repo: repo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this);\n  };\n\n  const getUrl = file => {\n    let url1 = \"https://raw.githubusercontent.com/\" + user + \"/\" + repo + \"/\" + branch + \"/\" + file.path;\n    return url1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showFiles()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Files;\nexport default Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js"],"names":["React","useState","Card","Lines","Files","content","repo","user","branch","showFiles","tree","map","file","index","color","type","textColor","path","showLines","getUrl","url1"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAqC;AAAA,MAApC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,GAAoC;;AAE/C,QAAMC,SAAS,GAAG,MAAM;AACpB,wBACI;AAAA,gBACCJ,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,cAAMC,KAAK,GAAIF,IAAI,CAACG,IAAL,KAAc,MAAd,GAAuB,MAAvB,GAAgC,OAA/C;AACA,cAAMC,SAAS,GAAIJ,IAAI,CAACG,IAAL,KAAc,MAAd,GAAuB,OAAvB,GAAiC,MAApD;AACA,4BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAGD,KAAX;AAAmB,UAAA,IAAI,EAAEE,SAAzB;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAeJ,IAAI,CAACK;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAaC,SAAS,CAACN,IAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAKA,OARH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAiBA,QAAMM,SAAS,GAAIN,IAAD,IAAU;AACxB,QAAIA,IAAI,CAACG,IAAL,KAAc,MAAlB,EACI,oBAAO,QAAC,KAAD;AAAO,MAAA,GAAG,EAAKI,MAAM,CAACP,IAAD,CAArB;AAA8B,MAAA,IAAI,EAAKN;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAP;AACP,GAHD;;AAKA,QAAMa,MAAM,GAAIP,IAAD,IAAU;AACrB,QAAIQ,IAAI,GAAG,uCAAuCb,IAAvC,GAA8C,GAA9C,GAAoDD,IAApD,GAA2D,GAA3D,GAAiEE,MAAjE,GAA0E,GAA1E,GAAgFI,IAAI,CAACK,IAAhG;AACA,WAAOG,IAAP;AACH,GAHD;;AAKA,sBACI;AAAA,cAAOX,SAAS;AAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAhCD;;KAAML,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Lines from './Lines'\n\nconst Files = ({ content, repo, user, branch }) => {\n\n    const showFiles = () => {\n        return (\n            <div>\n            {content.tree.map((file, index) => {\n                const color = (file.type === 'tree' ? 'info' : 'light')\n                const textColor = (file.type === 'tree' ? 'white' : 'dark')\n                return (\n                <Card bg={ color } text={textColor}>\n                    <Card.Header>{ file.path }</Card.Header>\n                    <Card.Text>{ showLines(file)}</Card.Text>\n                </Card>\n              )})}\n              </div>\n        )\n\n    }\n\n    const showLines = (file) => {\n        if (file.type === 'blob')\n            return <Lines url = { getUrl(file) } repo = { repo }/>\n    }\n\n    const getUrl = (file) => { \n        let url1 = \"https://raw.githubusercontent.com/\" + user + \"/\" + repo + \"/\" + branch + \"/\" + file.path\n        return url1\n    }\n\n    return(\n        <div>{ showFiles() }</div>\n    )\n}\n\n\nexport default Files"]},"metadata":{},"sourceType":"module"}