{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js\";\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      repositories: [],\n      loaded: false\n    };\n\n    this.getUser = async e => {\n      const userName = e.target.elements.userName.value;\n      e.preventDefault();\n      fetch(`https://api.github.com/users/${userName}/repos`).then(response => response.json()).then(data => {\n        const com = {},\n              arr = [];\n        data.forEach(repository => {\n          fetch(`${repository.commits_url.slice(0, -6)}`).then(response => response.json()).then(data => {\n            data.forEach(commit => {\n              com.html_url = commit.html_url;\n              com.url = commit.url;\n              arr.push(com);\n            });\n          });\n          this.setState(prevState => ({\n            repositories: [...prevState.repositories, {\n              \"name\": repository.name,\n              \"link\": repository.html_url,\n              \"languages\": repository.languages_url,\n              \"commits\": arr\n            }]\n          }));\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"App-title\",\n          children: \"Github API REST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getUser: this.getUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), this.state.loaded ? /*#__PURE__*/_jsxDEV(Repositories, {\n        repositories: this.state.repositories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js"],"names":["render","React","Component","Form","Repositories","App","state","repositories","loaded","getUser","e","userName","target","elements","value","preventDefault","fetch","then","response","json","data","com","arr","forEach","repository","commits_url","slice","commit","html_url","url","push","setState","prevState","name","languages_url"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,MAAM,EAAE;AAFC,KADkB;;AAAA,SAM1BC,OAN0B,GAMhB,MAAOC,CAAP,IAAa;AACxB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBF,QAAlB,CAA2BG,KAA5C;AACAJ,MAAAA,CAAC,CAACK,cAAF;AACAC,MAAAA,KAAK,CAAE,gCAA+BL,QAAS,QAA1C,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACb,cAAMC,GAAG,GAAG,EAAZ;AAAA,cAAgBC,GAAG,GAAG,EAAtB;AACAF,QAAAA,IAAI,CAACG,OAAL,CAAaC,UAAU,IAAI;AAC1BR,UAAAA,KAAK,CAAE,GAAEQ,UAAU,CAACC,WAAX,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,CAAoC,EAAxC,CAAL,CACCT,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACbA,YAAAA,IAAI,CAACG,OAAL,CAAaI,MAAM,IAAI;AACtBN,cAAAA,GAAG,CAACO,QAAJ,GAAeD,MAAM,CAACC,QAAtB;AACAP,cAAAA,GAAG,CAACQ,GAAJ,GAAUF,MAAM,CAACE,GAAjB;AACAP,cAAAA,GAAG,CAACQ,IAAJ,CAAST,GAAT;AACA,aAJD;AAKA,WARD;AASA,eAAKU,QAAL,CAAcC,SAAS,KAAK;AAC1BzB,YAAAA,YAAY,EAAE,CAAC,GAAGyB,SAAS,CAACzB,YAAd,EAA6B;AAC1C,sBAAQiB,UAAU,CAACS,IADuB;AAE1C,sBAAQT,UAAU,CAACI,QAFuB;AAG1C,2BAAaJ,UAAU,CAACU,aAHkB;AAI1C,yBAAWZ;AAJ+B,aAA7B;AADY,WAAL,CAAvB;AASA,SAnBD;AAoBA,OAxBD;AAyBE,KAlCyB;AAAA;;AAoC1BtB,EAAAA,MAAM,GAAG;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,eAID,QAAC,IAAD;AAAM,QAAA,OAAO,EAAK,KAAKS;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJC,EAKA,KAAKH,KAAL,CAAWE,MAAX,gBACA,QAAC,YAAD;AAAc,QAAA,YAAY,EAAI,KAAKF,KAAL,CAAWC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADA,GAGK,IARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeE;;AApDyB;;AAuD5B,eAAeF,GAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\n\nclass App extends Component {\n  state = {\n\trepositories: [],\n\tloaded: false\n  }\n\n  getUser = async (e) => {\n\tconst userName = e.target.elements.userName.value;\n\te.preventDefault()\n\tfetch(`https://api.github.com/users/${userName}/repos`)\n\t.then(response => response.json())\n\t.then(data => {\n\t\tconst com = {}, arr = []\n\t\tdata.forEach(repository => {\n\t\t\tfetch(`${repository.commits_url.slice(0, -6)}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tdata.forEach(commit => {\n\t\t\t\t\tcom.html_url = commit.html_url\n\t\t\t\t\tcom.url = commit.url\n\t\t\t\t\tarr.push(com)\n\t\t\t\t})\n\t\t\t})\n\t\t\tthis.setState(prevState => ({\n\t\t\t\t\trepositories: [...prevState.repositories,  {\n\t\t\t\t\t\t\"name\": repository.name,\n\t\t\t\t\t\t\"link\": repository.html_url,\n\t\t\t\t\t\t\"languages\": repository.languages_url,\n\t\t\t\t\t\t\"commits\": arr\n\t\t\t\t\t}]\n\t\t\t\t}));\n\t\t\t\n\t\t})\n\t})\n  }\n\n  render() {\n\treturn (\n\t  <div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t  <h1 className=\"App-title\">Github API REST</h1>\n\t\t</header>\n\t\t<Form getUser = { this.getUser }/>\n\t\t{this.state.loaded ? (\n\t\t\t<Repositories repositories= { this.state.repositories }/>\n      ) : (\n        null\n      )}\n\t\t\n\t\t\n\t  </div>\n\t)\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}