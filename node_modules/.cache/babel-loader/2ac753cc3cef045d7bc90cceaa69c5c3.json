{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\";\nimport React from \"react\";\nimport Repository from \"./Repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: props.repositories.map((repository, index) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", repository.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), repository.commits.forEach(element => {\n        console.log(element);\n      }), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: repository.link,\n        children: \"See on Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.getCommits,\n        children: \"See Commits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","Repository","Repositories","props","repositories","map","repository","index","name","commits","forEach","element","console","log","link","getCommits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,YAAY,GAAGC,KAAK,iBACtB,QAAC,KAAD,CAAO,QAAP;AAAA,YAEKA,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,UAAD,EAAcC,KAAd,KAAwB;AAChD,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,wBAAMD,UAAU,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMF,UAAU,CAACG,OAAX,CAAmBC,OAAnB,CAA2BC,OAAO,IAAI;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,OAFC,CAFN,eAKI;AAAG,QAAA,IAAI,EAAIL,UAAU,CAACQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAGX,KAAK,CAACY,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,OAAuBR,KAAvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXI;AAFL;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport Repository from \"./Repository\";\n\n\n\nconst Repositories = props => (\n    <React.Fragment>\n      \n       { props.repositories.map((repository , index) => {\n        return (\n            <React.Fragment key= { index }>\n                <p> { repository.name }</p>\n                { repository.commits.forEach(element => {\n                    console.log(element)\n                }) }\n                <a href= { repository.link } >See on Github</a>\n                <button onClick={ props.getCommits }>See Commits</button>\n            </React.Fragment>\n        )\n    })\n    }\n    </React.Fragment>\n)\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}