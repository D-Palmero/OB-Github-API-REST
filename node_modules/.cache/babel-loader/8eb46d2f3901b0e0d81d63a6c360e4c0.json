{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js\";\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      repositories: [],\n      commits: []\n    };\n\n    this.getUser = async e => {\n      const userName = e.target.elements.userName.value;\n      e.preventDefault();\n      const result = await fetch(`https://api.github.com/users/${userName}/repos`);\n      let repos = await result.json();\n      this.setState({\n        repositories: repos\n      });\n    };\n\n    this.getCommits = repo => async () => {\n      const result = await fetch(`${repo}`);\n      let response = await result.json();\n      this.setState({\n        commits: await response\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"App-title\",\n          children: \"Github API REST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getUser: this.getUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n        repositories: this.state.repositories,\n        getCommits: this.getCommits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/App.js"],"names":["render","React","Component","Form","Repositories","App","state","repositories","commits","getUser","e","userName","target","elements","value","preventDefault","result","fetch","repos","json","setState","getCommits","repo","response"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,OAAO,EAAE;AAFA,KADkB;;AAAA,SAqC1BC,OArC0B,GAqChB,MAAOC,CAAP,IAAa;AACxB,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBF,QAAlB,CAA2BG,KAA5C;AACAJ,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,QAAS,QAA1C,CAA1B;AACA,UAAIO,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAlB;AACA,WAAKC,QAAL,CAAe;AAACb,QAAAA,YAAY,EAAEW;AAAf,OAAf;AACE,KA3CyB;;AAAA,SA6C1BG,UA7C0B,GA6CZC,IAAD,IAAU,YAAW;AAC/B,YAAMN,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEK,IAAK,EAAT,CAA1B;AACA,UAAIC,QAAQ,GAAG,MAAMP,MAAM,CAACG,IAAP,EAArB;AACG,WAAKC,QAAL,CAAe;AAACZ,QAAAA,OAAO,EAAE,MAAMe;AAAhB,OAAf;AACH,KAjDuB;AAAA;;AAmD1BvB,EAAAA,MAAM,GAAG;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,eAID,QAAC,IAAD;AAAM,QAAA,OAAO,EAAK,KAAKS;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJC,eAKD,QAAC,YAAD;AAAc,QAAA,YAAY,EAAI,KAAKH,KAAL,CAAWC,YAAzC;AAAwD,QAAA,UAAU,EAAG,KAAKc;AAA1E;AAAA;AAAA;AAAA;AAAA,cALC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASE;;AA7DyB;;AAgE5B,eAAehB,GAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './components/Form';\nimport Repositories from './components/Repositories';\n\nclass App extends Component {\n  state = {\n\trepositories: [],\n\tcommits: []\n  }\n/*\n  getUser = async (e) => {\n\tconst userName = e.target.elements.userName.value;\n\te.preventDefault()\n\tfetch(`https://api.github.com/users/${userName}/repos`)\n\t.then(response => response.json())\n\t.then(data => {\n\t\tconsole.log(data.length)\n\t\tconst com = {}, arr = []\n\t\tdata.forEach(repository => {\n\t\t\tfetch(`${repository.commits_url.slice(0, -6)}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tdata.forEach(commit => {\n\t\t\t\t\tcom.html_url = commit.html_url\n\t\t\t\t\tcom.url = commit.url\n\t\t\t\t\tarr.push(com)\n\t\t\t\t})\n\t\t\t})\n\t\t\tthis.setState(prevState => ({\n\t\t\t\t\trepositories: [...prevState.repositories,  {\n\t\t\t\t\t\t\"name\": repository.name,\n\t\t\t\t\t\t\"link\": repository.html_url,\n\t\t\t\t\t\t\"languages\": repository.languages_url,\n\t\t\t\t\t\t\"commits\": arr\n\t\t\t\t\t}]\n\t\t\t\t}));\n\t\t\t\n\t\t})\n\t})\n  }\n  */\n  getUser = async (e) => {\n\tconst userName = e.target.elements.userName.value;\n\te.preventDefault()\n\tconst result = await fetch(`https://api.github.com/users/${userName}/repos`)\n\tlet repos = await result.json()\n\tthis.setState( {repositories: repos } )\n  }\n\n  getCommits = (repo) => async() => {\n\t    const result = await fetch(`${repo}`)\n\t    let response = await result.json()\n        this.setState( {commits: await response})\n    }\n\n  render() {\n\treturn (\n\t  <div className=\"App\">\n\t\t<header className=\"App-header\">\n\t\t  <h1 className=\"App-title\">Github API REST</h1>\n\t\t</header>\n\t\t<Form getUser = { this.getUser }/>\n\t\t<Repositories repositories= { this.state.repositories } getCommits= {this.getCommits}/>\n\t  </div>\n\t)\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}