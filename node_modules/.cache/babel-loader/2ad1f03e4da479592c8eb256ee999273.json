{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: props.repositories.map((repository, index) => {\n    console.log(\"Here: \" + repository);\n    /*const getCommits = async () => {\n        const user = repository.owner.login\n        const repo = repository.name\n        const url = `https://api.github.com/repos/${user}/${repo}/commits`\n        const commitsURL = await fetch(url);\n        const data = await commitsURL.json();\n        console.log(data)\n        this.setState( { repositories: data });\n    }*/\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", repository.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: repository.html_url,\n        children: \"See on Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","Repositories","props","repositories","map","repository","index","console","log","name","html_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,YAAY,GAAGC,KAAK,iBACtB,QAAC,KAAD,CAAO,QAAP;AAAA,YACEA,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,UAAD,EAAcC,KAAd,KAAwB;AAE7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUH,UAAtB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,wBAAMA,UAAU,CAACI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,IAAI,EAAIJ,UAAU,CAACK,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAuBJ,KAAvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAnBC;AADF;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\n\n\nconst Repositories = props => (\n    <React.Fragment>\n    { props.repositories.map((repository , index) => {\n        \n        console.log(\"Here: \" +repository)\n        /*const getCommits = async () => {\n            const user = repository.owner.login\n            const repo = repository.name\n            const url = `https://api.github.com/repos/${user}/${repo}/commits`\n            const commitsURL = await fetch(url);\n            const data = await commitsURL.json();\n            console.log(data)\n            this.setState( { repositories: data });\n        }*/\n\n        return (\n            <React.Fragment key= { index }>\n                <p> { repository.name }</p>\n                <a href= { repository.html_url } >See on Github</a>\n            </React.Fragment>\n        )\n    })\n    }\n    </React.Fragment>\n)\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}