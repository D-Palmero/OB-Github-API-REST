{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Commits from \"./Commits\";\nimport Repositories from \"./Repositories\";\nimport Details from \"./Details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [ready, setReady] = useState(true);\n  const [ready2, setReady2] = useState(true);\n  const [url, setUrl] = useState('');\n  const [content_url, setContent] = useState('');\n  const [tree_sha, setTree] = useState('');\n\n  const getReady = (commit_url, contents_url, tree_sha) => e => {\n    e.preventDefault();\n    setReady(false);\n    setUrl(commit_url);\n    console.log(commit_url);\n    setContent(contents_url);\n    setTree(tree_sha);\n  };\n\n  const getReady2 = tree_sha => e => {\n    e.preventDefault();\n    setReady2(false);\n    console.log(tree_sha);\n    setTree(tree_sha);\n  };\n\n  const show = () => {\n    if (ready) return /*#__PURE__*/_jsxDEV(Repositories, {\n      user: user,\n      getReady: getReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);else return /*#__PURE__*/_jsxDEV(Commits, {\n      url: url,\n      getReady2: getReady2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: show()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"eKnAxUbMbdR6jteNygnyiRRM/Og=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js"],"names":["React","useState","useEffect","Commits","Repositories","Details","User","user","ready","setReady","ready2","setReady2","url","setUrl","content_url","setContent","tree_sha","setTree","getReady","commit_url","contents_url","e","preventDefault","console","log","getReady2","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAIA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,WAAD,EAAcC,UAAd,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,OAAX,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMiB,QAAQ,GAAG,CAACC,UAAD,EAAaC,YAAb,EAA2BJ,QAA3B,KAAyCK,CAAD,IAAO;AAClEA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACMI,IAAAA,MAAM,CAACM,UAAD,CAAN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAJ,IAAAA,UAAU,CAACK,YAAD,CAAV;AACAH,IAAAA,OAAO,CAACD,QAAD,CAAP;AACN,GAPE;;AASA,QAAMS,SAAS,GAAIT,QAAD,IAAeK,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACNX,IAAAA,SAAS,CAAC,KAAD,CAAT;AACMY,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAC,IAAAA,OAAO,CAACD,QAAD,CAAP;AACH,GALD;;AAOA,QAAMU,IAAI,GAAG,MAAM;AACf,QAAIlB,KAAJ,EACI,oBAAO,QAAC,YAAD;AAAc,MAAA,IAAI,EAAKD,IAAvB;AAA8B,MAAA,QAAQ,EAAKW;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAP,CADJ,KAGI,oBAAO,QAAC,OAAD;AAAS,MAAA,GAAG,EAAKN,GAAjB;AAAuB,MAAA,SAAS,EAAKa;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACP,GALD;;AAMA,sBACI;AAAA,cACMC,IAAI;AADV;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMpB,I;;KAAAA,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Commits from \"./Commits\";\nimport Repositories from \"./Repositories\";\nimport Details from \"./Details\";\n\n\n\nconst User = ({ user }) => {\n    const [ready, setReady] = useState(true)\n    const [ready2, setReady2] = useState(true)\n    const [url, setUrl] = useState('')\n    const [content_url, setContent] = useState('')\n    const [tree_sha, setTree] = useState('')\n\n    const getReady = (commit_url, contents_url, tree_sha) => (e) => {\n\t\te.preventDefault()\n\t\tsetReady(false)\n        setUrl(commit_url)\n        console.log(commit_url)\n        setContent(contents_url)\n        setTree(tree_sha)\n\t}\n\n    const getReady2 = (tree_sha) => (e) => {\n        e.preventDefault()\n\t\tsetReady2(false)\n        console.log(tree_sha)\n        setTree(tree_sha)\n    }\n\n    const show = () => {\n        if (ready)\n            return <Repositories user = { user } getReady = { getReadyÂ }/>\n        else\n            return <Commits url = { url } getReady2 =  {getReady2} />\n    }\n    return(\n        <div>\n            { show() }\n        </div>\n    )\n}\n\n\nexport default User"]},"metadata":{},"sourceType":"module"}