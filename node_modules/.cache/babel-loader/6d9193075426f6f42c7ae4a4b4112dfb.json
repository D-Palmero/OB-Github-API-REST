{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Commits from \"./Commits\";\nimport Repositories from \"./Repositories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [ready, setReady] = useState(true);\n  const [repo, setRepo] = useState('');\n  const [branch, setBranch] = useState('');\n  const [url, setUrl] = useState('');\n  const [token] = useState('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');\n\n  const getReady = (commit_url, repo, branch, state) => e => {\n    e.preventDefault();\n    setReady(state);\n    if (commit_url !== '') setUrl(commit_url);\n    if (repo !== '') setRepo(repo);\n    if (branch !== '') setBranch(branch);\n  };\n\n  const show = () => {\n    if (ready) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Repositories, {\n        user: user,\n        token: token,\n        getReady: getReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Commits, {\n        user: user,\n        repo: repo,\n        url: url,\n        branch: branch,\n        token: token,\n        getReady: getReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: show()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"B5k0eiDeRBRp1YQX5WyV1KkaaC4=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js"],"names":["React","useState","Commits","Repositories","User","user","ready","setReady","repo","setRepo","branch","setBranch","url","setUrl","token","getReady","commit_url","state","e","preventDefault","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,KAAD,IAAUb,QAAQ,CAAC,0CAAD,CAAxB;;AAEA,QAAMc,QAAQ,GAAG,CAACC,UAAD,EAAaR,IAAb,EAAmBE,MAAnB,EAA2BO,KAA3B,KAAsCC,CAAD,IAAO;AAC/DA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACU,KAAD,CAAR;AACM,QAAID,UAAU,KAAK,EAAnB,EACIH,MAAM,CAACG,UAAD,CAAN;AACJ,QAAIR,IAAI,KAAK,EAAb,EACIC,OAAO,CAACD,IAAD,CAAP;AACJ,QAAIE,MAAM,KAAK,EAAf,EACIC,SAAS,CAACD,MAAD,CAAT;AACV,GATE;;AAWA,QAAMU,IAAI,GAAG,MAAM;AACf,QAAId,KAAJ,EACI,oBAAO;AAAA,6BAAK,QAAC,YAAD;AAAc,QAAA,IAAI,EAAKD,IAAvB;AAA8B,QAAA,KAAK,EAAKS,KAAxC;AAAgD,QAAA,QAAQ,EAAKC;AAA7D;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP,CADJ,KAGI,oBAAO;AAAA,6BAAK,QAAC,OAAD;AAAS,QAAA,IAAI,EAAKV,IAAlB;AAAyB,QAAA,IAAI,EAAIG,IAAjC;AAAuC,QAAA,GAAG,EAAKI,GAA/C;AAAqD,QAAA,MAAM,EAAKF,MAAhE;AAAyE,QAAA,KAAK,EAAKI,KAAnF;AAA2F,QAAA,QAAQ,EAAKC;AAAxG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACP,GALD;;AAOA,sBACI;AAAA,cACMK,IAAI;AADV;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BD;;GAAMhB,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Commits from \"./Commits\";\nimport Repositories from \"./Repositories\";\n\n\nconst User = ({ user }) => {\n    const [ready, setReady] = useState(true)\n    const [repo, setRepo] = useState('')\n    const [branch, setBranch] = useState('')\n    const [url, setUrl] = useState('')\n    const [token] = useState('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')\n\n    const getReady = (commit_url, repo, branch, state) => (e) => {\n\t\te.preventDefault()\n\t\tsetReady(state)\n        if (commit_url !== '')\n            setUrl(commit_url)\n        if (repo !== '')\n            setRepo(repo)\n        if (branch !== '')\n            setBranch(branch)\n\t}\n\n    const show = () => {\n        if (ready)\n            return <div><Repositories user = { user } token = { token } getReady = { getReadyÂ }/></div>\n        else\n            return <div><Commits user = { user } repo = {repo }url = { url } branch = { branch } token = { token } getReady = { getReady }/></div>\n    }\n\n    return(\n        <div>\n            { show() }\n        </div>\n    )\n}\n\n\nexport default User"]},"metadata":{},"sourceType":"module"}