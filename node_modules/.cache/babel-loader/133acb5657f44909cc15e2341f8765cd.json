{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repository.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repository = props => {\n  return props.repository.map(commit => {\n    /*#__PURE__*/\n    _jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", commit.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: commit.html_url,\n        children: \"See on Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  })\n  /*\n  { propssrepository.commits.map(element => {\n      return(\n          <ul>\n              <li> { element.url }</li>\n              <a href= { element.html_url } >See on Github</a>\n          </ul>\n      )\n  })}\n  */\n  ;\n};\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repository.js"],"names":["React","Repository","props","repository","map","commit","url","html_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,SACIA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqBC,MAAM,IAAI;AAC3B;AAAA;AAAA,8BACI;AAAA,wBAAOA,MAAM,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,IAAI,EAAID,MAAM,CAACE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH,GALD;AAOA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBI;AAmBH,CArBD;;KAAMN,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nconst Repository = props => {\n \n    return (\n        props.repository.map(commit => {\n            <ul>\n                <li> { commit.url }</li>\n                <a href= { commit.html_url } >See on Github</a>\n            </ul>\n        })\n        \n        /*\n        { propssrepository.commits.map(element => {\n            return(\n                <ul>\n                    <li> { element.url }</li>\n                    <a href= { element.html_url } >See on Github</a>\n                </ul>\n            )\n        })}\n        */\n    )\n}\n\nexport default Repository\n"]},"metadata":{},"sourceType":"module"}