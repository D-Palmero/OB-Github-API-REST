{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commits = _ref => {\n  _s();\n\n  let {\n    url,\n    getReady2\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url);\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Los commits son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [commits.map((commit, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: commit.commit.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), console.log(commit)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\"),\n        children: \"See commits!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Commits, \"MDPvwMus/3sAH8A2a+RvQUDtALY=\");\n\n_c = Commits;\nexport default Commits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js"],"names":["React","useState","useEffect","Commits","url","getReady2","commits","setCommits","result","fetch","repos","json","length","map","commit","index","message","console","log","replace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAuB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMM,MAAM,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA1B;AACH,YAAMM,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AAEGJ,MAAAA,UAAU,CAACG,KAAD,CAAV;AACH,KALD;AAMH,GAPQ,EAON,CAACN,GAAD,CAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,OAAO,CAACM,MAAR,GAAiB,CAAjB,gBACA;AAAA,iBACIN,OAAO,CAACO,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,4BACA;AAAA,kCACI;AAAA,sBAAKD,MAAM,CAACA,MAAP,CAAcE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEMC,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CAFN;AAAA,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAIS,OALZ,CADJ,eAQO;AAAQ,QAAA,OAAO,EAAIV,SAAS,CAACC,OAAO,CAAC,CAAD,CAAP,CAAWF,GAAX,CAAee,OAAf,CAAuB,SAAvB,EAAkC,WAAlC,IAAiD,cAAlD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARP;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAhCD;;GAAMhB,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Commits = ({ url, getReady2 }) => {\n    const [commits, setCommits] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url)\n\t        const repos = await result.json()\n            \n            setCommits(repos)\n        })()\n    }, [url])\n\n    return(\n        <div>\n            <h3>Los commits son:</h3>\n            {commits.length > 0 ? \n            (<div >\n                {commits.map((commit, index) => {\n                    return (\n                    <div key = { index }>\n                        <h4>{commit.commit.message}</h4>\n                        { console.log(commit)}\n                    </div> )})}\n                    \n                    <button onClick= { getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\") } >See commits!</button>\n            </div> \n            )\n            :\n            <p>El usuario no tiene repositorios</p>\n            }\n        </div>\n    )\n}\n\n\nexport default Commits"]},"metadata":{},"sourceType":"module"}