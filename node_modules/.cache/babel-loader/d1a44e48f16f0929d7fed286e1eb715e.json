{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repositories = props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [props.repositories.map((repository, index) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", repository.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: repository.html_url,\n        children: \"See on Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }), \"console.log(props)\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Repositories.js"],"names":["React","Repositories","props","repositories","map","repository","index","name","html_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,iBACtB,QAAC,KAAD,CAAO,QAAP;AAAA,aACEA,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,UAAD,EAAcC,KAAd,KAAwB;AAC7C,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,wBAAMD,UAAU,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,IAAI,EAAIF,UAAU,CAACG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPC,CADF;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nconst Repositories = props => (\n    <React.Fragment>\n    { props.repositories.map((repository , index) => {\n        return (\n            <React.Fragment key= { index }>\n                <p> { repository.name }</p>\n                <a href= { repository.html_url } >See on Github</a>\n            </React.Fragment>\n        )\n    })\n    }\n    console.log(props)\n    </React.Fragment>\n)\n\n\nexport default Repositories"]},"metadata":{},"sourceType":"module"}