{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Lines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lines = _ref => {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [file, setFile] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url);\n      const repos = await result.text();\n      setFile(repos);\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: file.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [(file.match(/\\n/g) || '').length, \" l\\xEDneas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No se pudieron contar las l\\xEDneas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Lines, \"fffwSa/UwItWqZhC/p3A7WDg3nU=\");\n\n_c = Lines;\nexport default Lines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lines\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Lines.js"],"names":["React","useState","useEffect","Card","Lines","url","file","setFile","result","fetch","repos","text","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC1B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CACR,MAAM;AACL,KAAC,YAAY;AACZ,YAAMM,MAAM,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA1B;AACA,YAAMK,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AAEAJ,MAAAA,OAAO,CAACG,KAAD,CAAP;AACA,KALD;AAMA,GARO,EASR,CAAEL,GAAF,CATQ,CAAT;AAYA,sBACC,QAAC,IAAD;AAAA,cACEC,IAAI,CAACM,MAAL,GAAc,CAAd,gBACA,QAAC,IAAD,CAAM,IAAN;AAAA,iBAAY,CAACN,IAAI,CAACO,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0BD,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAxBD;;GAAMR,K;;KAAAA,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst Lines = ({ url }) => {\n\tconst [ file, setFile ] = useState('');\n\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tconst result = await fetch(url);\n\t\t\t\tconst repos = await result.text();\n\n\t\t\t\tsetFile(repos);\n\t\t\t})();\n\t\t},\n\t\t[ url ]\n\t);\n\n\treturn (\n\t\t<Card>\n\t\t\t{file.length > 0 ? (\n\t\t\t\t<Card.Text>{(file.match(/\\n/g) || '').length} líneas</Card.Text>\n\t\t\t) : (\n\t\t\t\t<h4>No se pudieron contar las líneas</h4>\n\t\t\t)}\n\t\t</Card>\n\t);\n};\n\nexport default Lines;\n"]},"metadata":{},"sourceType":"module"}