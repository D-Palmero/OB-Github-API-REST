{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Details.js\",\n    _s = $RefreshSig$();\n\nimport { getSuggestedQuery } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = _ref => {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [content, setContent] = useState('');\n  const [num, setNum] = useState({\n    '.c': 0\n  });\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url);\n      const contents = await result.json();\n      setContent(contents);\n    })();\n  }, [url]);\n\n  const getType = file => {\n    let ext;\n    if (file.lastIndexOf('.') !== -1) ext = file.substr(file.lastIndexOf('.'));else ext = file;\n    /*\n    if (num[ext] !== undefined)\n        num[ext] += 1\n    else\n        setNum({...num, [ext]: 0})\n    */\n\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", file]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getCount = () => {\n    let lang = {};\n    let files = content.tree;\n\n    for (let i = 0; i < files.length; i++) {\n      console.log(\"hello\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Los archivos son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), typeof content === 'object' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [content.tree.map((file, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getType(file.path)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      }), getCount()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El repositorio no tiene contenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"MMkLOExWzJAj5euBPntq7ItlD3U=\");\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Details.js"],"names":["getSuggestedQuery","React","useState","useEffect","Details","url","content","setContent","num","setNum","result","fetch","contents","json","getType","file","ext","lastIndexOf","substr","getCount","lang","files","tree","i","length","console","log","map","index","path"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,OAAO,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC;AAAC,UAAM;AAAP,GAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMO,MAAM,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA1B;AACH,YAAMO,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAvB;AAEGN,MAAAA,UAAU,CAACK,QAAD,CAAV;AACH,KALD;AAMH,GAPQ,EAON,CAACP,GAAD,CAPM,CAAT;;AASA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACtB,QAAIC,GAAJ;AACA,QAAID,IAAI,CAACE,WAAL,CAAiB,GAAjB,MAA0B,CAAC,CAA/B,EACID,GAAG,GAAGD,IAAI,CAACG,MAAL,CAAYH,IAAI,CAACE,WAAL,CAAiB,GAAjB,CAAZ,CAAN,CADJ,KAGID,GAAG,GAAGD,IAAN;AACJ;AACR;AACA;AACA;AACA;AACA;;AACQ,wBAAO;AAAA,sBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAbD;;AAeA,QAAMI,QAAQ,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAGf,OAAO,CAACgB,IAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,GAND;;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,OAAOpB,OAAP,KAAoB,QAApB,gBACA;AAAA,iBACIA,OAAO,CAACgB,IAAR,CAAaK,GAAb,CAAiB,CAACZ,IAAD,EAAOa,KAAP,KAAiB;AAC/B,4BACA;AAAA,oBACMd,OAAO,CAACC,IAAI,CAACc,IAAN;AADb,WAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAGS,OAJZ,CADJ,EAMKT,QAAQ,EANb;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBC,CArDL;;GAAMf,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import { getSuggestedQuery } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst Details = ({ url }) => {\n    const [content, setContent] = useState('')\n    const [num, setNum] = useState({'.c': 0})\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url)\n\t        const contents = await result.json()\n            \n            setContent(contents)\n        })()\n    }, [url])\n\n    const getType = (file) => {\n        let ext\n        if (file.lastIndexOf('.') !== -1)\n            ext = file.substr(file.lastIndexOf('.'))\n        else\n            ext = file\n        /*\n        if (num[ext] !== undefined)\n            num[ext] += 1\n        else\n            setNum({...num, [ext]: 0})\n        */\n        return <h4> { file }</h4>\n    }\n\n    const getCount = () => {\n        let lang = {}\n        let files = content.tree\n        for (let i = 0; i < files.length; i++) {\n            console.log(\"hello\")\n        }\n    }\n    return(\n        <div>\n            <h3>Los archivos son:</h3>\n            {typeof(content) === 'object' ? \n            (<div >\n                {content.tree.map((file, index) => {\n                    return (\n                    <div key = { index }>\n                        { getType(file.path) }\n                    </div> )})}\n                { getCount() }\n            </div> \n            )\n            :\n            <p>El repositorio no tiene contenido</p>\n            }\n        </div>\n    )\n    }\n\nexport default Details\n"]},"metadata":{},"sourceType":"module"}