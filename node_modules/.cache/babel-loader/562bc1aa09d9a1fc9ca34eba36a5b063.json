{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Files from './Files';\nimport { Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = _ref => {\n  _s();\n\n  let {\n    url,\n    user,\n    repo,\n    branch\n  } = _ref;\n  const [content, setContent] = useState('');\n  const [ready2, setReady2] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url, {\n        headers: {\n          Authorization: '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'\n        }\n      });\n      const contents = await result.json();\n      setContent(contents);\n    })();\n  }, [url]);\n\n  const getReady2 = state => e => {\n    e.preventDefault();\n    setReady2(state);\n  };\n\n  const getCount = () => {\n    let lang = {};\n    let ext;\n    let files = content.tree;\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].type !== 'tree') {\n        if (files[i].path.lastIndexOf('.') !== -1) ext = files[i].path.substr(files[i].path.lastIndexOf('.'));else ext = files[i].path;\n        if (ext.lastIndexOf('/') !== -1) ext = ext.substr(ext.lastIndexOf('/'));\n        if (lang[ext] !== undefined) lang[ext] += 1;else lang[ext] = 1;\n      }\n    }\n\n    return lang;\n  };\n\n  const showFilesCount = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: Object.entries(getCount()).map(_ref2 => {\n          let [key, value] = _ref2;\n          return /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [key, \" : \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  };\n\n  const show = () => {\n    if (ready2) {\n      return showFilesCount();\n    } else return /*#__PURE__*/_jsxDEV(Files, {\n      content: content,\n      repo: repo,\n      user: user,\n      branch: branch,\n      getReady2: getReady2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: typeof content === 'object' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        bg: \"primary\",\n        text: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Number of files: \", repo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: getReady2(false),\n            children: \"Show files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: show()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El repositorio no tiene contenido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Details, \"/uwx0m7vu+uNcYrsOx4pdqkMSpk=\");\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Details.js"],"names":["React","useState","useEffect","Files","Button","Card","Details","url","user","repo","branch","content","setContent","ready2","setReady2","result","fetch","headers","Authorization","contents","json","getReady2","state","e","preventDefault","getCount","lang","ext","files","tree","i","length","type","path","lastIndexOf","substr","undefined","showFilesCount","Object","entries","map","key","value","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;;AAEA,MAAMC,OAAO,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,GAAgC;AAChD,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEY,MAAF,EAAUC,SAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CACR,MAAM;AACL,KAAC,YAAY;AACZ,YAAMa,MAAM,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC/BU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB;AADsB,OAAN,CAA1B;AAGA,YAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAAvB;AAEAR,MAAAA,UAAU,CAACO,QAAD,CAAV;AACA,KAPD;AAQA,GAVO,EAWR,CAAEZ,GAAF,CAXQ,CAAT;;AAcA,QAAMc,SAAS,GAAIC,KAAD,IAAYC,CAAD,IAAO;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,SAAS,CAACQ,KAAD,CAAT;AACA,GAHD;;AAKA,QAAMG,QAAQ,GAAG,MAAM;AACtB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,GAAJ;AACA,QAAIC,KAAK,GAAGjB,OAAO,CAACkB,IAApB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAIF,KAAK,CAACE,CAAD,CAAL,CAASE,IAAT,KAAkB,MAAtB,EAA8B;AAC7B,YAAIJ,KAAK,CAACE,CAAD,CAAL,CAASG,IAAT,CAAcC,WAAd,CAA0B,GAA1B,MAAmC,CAAC,CAAxC,EAA2CP,GAAG,GAAGC,KAAK,CAACE,CAAD,CAAL,CAASG,IAAT,CAAcE,MAAd,CAAqBP,KAAK,CAACE,CAAD,CAAL,CAASG,IAAT,CAAcC,WAAd,CAA0B,GAA1B,CAArB,CAAN,CAA3C,KACKP,GAAG,GAAGC,KAAK,CAACE,CAAD,CAAL,CAASG,IAAf;AACL,YAAIN,GAAG,CAACO,WAAJ,CAAgB,GAAhB,MAAyB,CAAC,CAA9B,EAAiCP,GAAG,GAAGA,GAAG,CAACQ,MAAJ,CAAWR,GAAG,CAACO,WAAJ,CAAgB,GAAhB,CAAX,CAAN;AACjC,YAAIR,IAAI,CAACC,GAAD,CAAJ,KAAcS,SAAlB,EAA6BV,IAAI,CAACC,GAAD,CAAJ,IAAa,CAAb,CAA7B,KACKD,IAAI,CAACC,GAAD,CAAJ,GAAY,CAAZ;AACL;AACD;;AACD,WAAOD,IAAP;AACA,GAfD;;AAiBA,QAAMW,cAAc,GAAG,MAAM;AAC5B,wBACC;AAAA,6BACC,QAAC,IAAD;AAAA,kBACEC,MAAM,CAACC,OAAP,CAAed,QAAQ,EAAvB,EAA2Be,GAA3B,CAA+B,SAAoB;AAAA,cAAnB,CAAEC,GAAF,EAAOC,KAAP,CAAmB;AACnD,8BACC,QAAC,IAAD,CAAM,IAAN;AAAA,uBACED,GADF,SACUC,KADV;AAAA,aAAgBD,GAAhB;AAAA;AAAA;AAAA;AAAA,kBADD;AAKA,SANA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAaA,GAdD;;AAgBA,QAAME,IAAI,GAAG,MAAM;AAClB,QAAI9B,MAAJ,EAAY;AACX,aAAOwB,cAAc,EAArB;AACA,KAFD,MAEO,oBAAO,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE1B,OAAhB;AAAyB,MAAA,IAAI,EAAEF,IAA/B;AAAqC,MAAA,IAAI,EAAED,IAA3C;AAAiD,MAAA,MAAM,EAAEE,MAAzD;AAAiE,MAAA,SAAS,EAAEW;AAA5E;AAAA;AAAA;AAAA;AAAA,YAAP;AACP,GAJD;;AAKA,sBACC;AAAA,cACE,OAAOV,OAAP,KAAmB,QAAnB,gBACA;AAAA,8BACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA,gCACC,QAAC,IAAD,CAAM,MAAN;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,4CAAsBF,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC,QAAC,IAAD,CAAM,IAAN;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,OAAhB;AAAwB,YAAA,OAAO,EAAEY,SAAS,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAaC;AAAA,kBAAMsB,IAAI;AAAV;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CApFD;;GAAMrC,O;;KAAAA,O;AAsFN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Files from './Files';\nimport { Button, Card } from 'react-bootstrap';\n\nconst Details = ({ url, user, repo, branch }) => {\n\tconst [ content, setContent ] = useState('');\n\tconst [ ready2, setReady2 ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tconst result = await fetch(url, {\n\t\t\t\t\theaders: { Authorization: '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' }\n\t\t\t\t});\n\t\t\t\tconst contents = await result.json();\n\n\t\t\t\tsetContent(contents);\n\t\t\t})();\n\t\t},\n\t\t[ url ]\n\t);\n\n\tconst getReady2 = (state) => (e) => {\n\t\te.preventDefault();\n\t\tsetReady2(state);\n\t};\n\n\tconst getCount = () => {\n\t\tlet lang = {};\n\t\tlet ext;\n\t\tlet files = content.tree;\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tif (files[i].type !== 'tree') {\n\t\t\t\tif (files[i].path.lastIndexOf('.') !== -1) ext = files[i].path.substr(files[i].path.lastIndexOf('.'));\n\t\t\t\telse ext = files[i].path;\n\t\t\t\tif (ext.lastIndexOf('/') !== -1) ext = ext.substr(ext.lastIndexOf('/'));\n\t\t\t\tif (lang[ext] !== undefined) lang[ext] += 1;\n\t\t\t\telse lang[ext] = 1;\n\t\t\t}\n\t\t}\n\t\treturn lang;\n\t};\n\n\tconst showFilesCount = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card>\n\t\t\t\t\t{Object.entries(getCount()).map(([ key, value ]) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card.Text key={key}>\n\t\t\t\t\t\t\t\t{key} : {value}\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst show = () => {\n\t\tif (ready2) {\n\t\t\treturn showFilesCount();\n\t\t} else return <Files content={content} repo={repo} user={user} branch={branch} getReady2={getReady2} />;\n\t};\n\treturn (\n\t\t<div>\n\t\t\t{typeof content === 'object' ? (\n\t\t\t\t<div>\n\t\t\t\t\t<Card bg=\"primary\" text=\"white\">\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<h2>Number of files: {repo}</h2>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Button variant=\"light\" onClick={getReady2(false)}>\n\t\t\t\t\t\t\t\tShow files\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<div>{show()}</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>El repositorio no tiene contenido</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}