{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Lines from './Lines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Files = _ref => {\n  let {\n    content,\n    repo,\n    user,\n    branch\n  } = _ref;\n\n  const showFiles = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content.tree.map((file, index) => {\n        const color = file.type === 'tree' ? 'info' : 'light';\n        const textColor = file.type === 'tree' ? 'white' : 'dark';\n        return /*#__PURE__*/_jsxDEV(Card, {\n          bg: color,\n          text: textColor,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: file.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: showLines(file)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 8\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this);\n  };\n\n  const showLines = file => {\n    if (file.type === 'blob') return /*#__PURE__*/_jsxDEV(Lines, {\n      url: getUrl(file),\n      repo: repo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 36\n    }, this);\n  };\n\n  const getUrl = file => {\n    let url1 = 'https://raw.githubusercontent.com/' + user + '/' + repo + '/' + branch + '/' + file.path;\n    return url1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showFiles()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Files;\nexport default Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Files.js"],"names":["React","Card","Lines","Files","content","repo","user","branch","showFiles","tree","map","file","index","color","type","textColor","path","showLines","getUrl","url1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAAqC;AAAA,MAApC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,GAAoC;;AAClD,QAAMC,SAAS,GAAG,MAAM;AACvB,wBACC;AAAA,gBACEJ,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,cAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,KAAc,MAAd,GAAuB,MAAvB,GAAgC,OAA9C;AACA,cAAMC,SAAS,GAAGJ,IAAI,CAACG,IAAL,KAAc,MAAd,GAAuB,OAAvB,GAAiC,MAAnD;AACA,4BACC,QAAC,IAAD;AAAkB,UAAA,EAAE,EAAED,KAAtB;AAA6B,UAAA,IAAI,EAAEE,SAAnC;AAAA,kCACC,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcJ,IAAI,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAMC,SAAS,CAACN,IAAD;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA,WAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AAMA,OATA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAcA,GAfD;;AAiBA,QAAMK,SAAS,GAAIN,IAAD,IAAU;AAC3B,QAAIA,IAAI,CAACG,IAAL,KAAc,MAAlB,EAA0B,oBAAO,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEI,MAAM,CAACP,IAAD,CAAlB;AAA0B,MAAA,IAAI,EAAEN;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AAC1B,GAFD;;AAIA,QAAMa,MAAM,GAAIP,IAAD,IAAU;AACxB,QAAIQ,IAAI,GAAG,uCAAuCb,IAAvC,GAA8C,GAA9C,GAAoDD,IAApD,GAA2D,GAA3D,GAAiEE,MAAjE,GAA0E,GAA1E,GAAgFI,IAAI,CAACK,IAAhG;AACA,WAAOG,IAAP;AACA,GAHD;;AAKA,sBAAO;AAAA,cAAMX,SAAS;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CA5BD;;KAAML,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Lines from './Lines';\n\nconst Files = ({ content, repo, user, branch }) => {\n\tconst showFiles = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{content.tree.map((file, index) => {\n\t\t\t\t\tconst color = file.type === 'tree' ? 'info' : 'light';\n\t\t\t\t\tconst textColor = file.type === 'tree' ? 'white' : 'dark';\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card key={index} bg={color} text={textColor}>\n\t\t\t\t\t\t\t<Card.Header>{file.path}</Card.Header>\n\t\t\t\t\t\t\t<div>{showLines(file)}</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst showLines = (file) => {\n\t\tif (file.type === 'blob') return <Lines url={getUrl(file)} repo={repo} />;\n\t};\n\n\tconst getUrl = (file) => {\n\t\tlet url1 = 'https://raw.githubusercontent.com/' + user + '/' + repo + '/' + branch + '/' + file.path;\n\t\treturn url1;\n\t};\n\n\treturn <div>{showFiles()}</div>;\n};\n\nexport default Files;\n"]},"metadata":{},"sourceType":"module"}