{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Commits from './Commits';\nimport Repositories from './Repositories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [ready, setReady] = useState(true);\n  const [repo, setRepo] = useState('');\n  const [branch, setBranch] = useState('');\n  const [url, setUrl] = useState('');\n  const [token] = useState('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');\n\n  const getReady = (commit_url, repo, branch, state) => e => {\n    e.preventDefault();\n    setReady(state);\n    if (commit_url !== '') setUrl(commit_url);\n    if (repo !== '') setRepo(repo);\n    if (branch !== '') setBranch(branch);\n  };\n\n  const show = () => {\n    if (ready) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Repositories, {\n        user: user,\n        token: token,\n        getReady: getReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Commits, {\n        user: user,\n        repo: repo,\n        url: url,\n        branch: branch,\n        token: token,\n        getReady: getReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: show()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"VeBWtTczvn9bTMWGcE6hF8ZI4q4=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/User.js"],"names":["React","useState","Commits","Repositories","User","user","ready","setReady","repo","setRepo","branch","setBranch","url","setUrl","token","getReady","commit_url","state","e","preventDefault","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC1B,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAES,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEW,GAAF,EAAOC,MAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAEa,KAAF,IAAYb,QAAQ,CAAC,0CAAD,CAA1B;;AAEA,QAAMc,QAAQ,GAAG,CAACC,UAAD,EAAaR,IAAb,EAAmBE,MAAnB,EAA2BO,KAA3B,KAAsCC,CAAD,IAAO;AAC5DA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACU,KAAD,CAAR;AACA,QAAID,UAAU,KAAK,EAAnB,EAAuBH,MAAM,CAACG,UAAD,CAAN;AACvB,QAAIR,IAAI,KAAK,EAAb,EAAiBC,OAAO,CAACD,IAAD,CAAP;AACjB,QAAIE,MAAM,KAAK,EAAf,EAAmBC,SAAS,CAACD,MAAD,CAAT;AACnB,GAND;;AAQA,QAAMU,IAAI,GAAG,MAAM;AAClB,QAAId,KAAJ,EACC,oBACC;AAAA,6BACC,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAA0B,QAAA,KAAK,EAAES,KAAjC;AAAwC,QAAA,QAAQ,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,CADD,KAOC,oBACC;AAAA,6BACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEV,IAAf;AAAqB,QAAA,IAAI,EAAEG,IAA3B;AAAiC,QAAA,GAAG,EAAEI,GAAtC;AAA2C,QAAA,MAAM,EAAEF,MAAnD;AAA2D,QAAA,KAAK,EAAEI,KAAlE;AAAyE,QAAA,QAAQ,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKD,GAbD;;AAeA,sBAAO;AAAA,cAAMK,IAAI;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CA/BD;;GAAMhB,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Commits from './Commits';\nimport Repositories from './Repositories';\n\nconst User = ({ user }) => {\n\tconst [ ready, setReady ] = useState(true);\n\tconst [ repo, setRepo ] = useState('');\n\tconst [ branch, setBranch ] = useState('');\n\tconst [ url, setUrl ] = useState('');\n\tconst [ token ] = useState('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');\n\n\tconst getReady = (commit_url, repo, branch, state) => (e) => {\n\t\te.preventDefault();\n\t\tsetReady(state);\n\t\tif (commit_url !== '') setUrl(commit_url);\n\t\tif (repo !== '') setRepo(repo);\n\t\tif (branch !== '') setBranch(branch);\n\t};\n\n\tconst show = () => {\n\t\tif (ready)\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Repositories user={user} token={token} getReady={getReady} />\n\t\t\t\t</div>\n\t\t\t);\n\t\telse\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Commits user={user} repo={repo} url={url} branch={branch} token={token} getReady={getReady} />\n\t\t\t\t</div>\n\t\t\t);\n\t};\n\n\treturn <div>{show()}</div>;\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}