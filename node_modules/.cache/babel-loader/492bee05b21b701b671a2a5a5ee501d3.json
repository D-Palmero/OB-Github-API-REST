{"ast":null,"code":"var _jsxFileName = \"/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Commits = _ref => {\n  _s();\n\n  let {\n    url,\n    user,\n    repo,\n    getReady,\n    getReady2\n  } = _ref;\n  const [commits, setCommits] = useState('');\n  useEffect(() => {\n    (async () => {\n      const result = await fetch(url);\n      const repos = await result.json();\n      setCommits(repos);\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Los commits son:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(commits), getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\", false), commits.map((commit, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: commit.commit.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\"),\n        children: \"See commits!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El usuario no tiene repositorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getReady(\"\", \"\", true),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Commits, \"MDPvwMus/3sAH8A2a+RvQUDtALY=\");\n\n_c = Commits;\nexport default Commits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commits\");","map":{"version":3,"sources":["/Users/dapalmer/Documents/OB-Github-API-REST/ob-github-api/src/components/Commits.js"],"names":["React","useState","useEffect","Commits","url","user","repo","getReady","getReady2","commits","setCommits","result","fetch","repos","json","length","console","log","replace","map","commit","index","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,QAA8C;AAAA;;AAAA,MAA7C;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAA6C;AAC1D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAW;AACR,YAAMS,MAAM,GAAG,MAAMC,KAAK,CAACR,GAAD,CAA1B;AACH,YAAMS,KAAK,GAAG,MAAMF,MAAM,CAACG,IAAP,EAApB;AAEGJ,MAAAA,UAAU,CAACG,KAAD,CAAV;AACH,KALD;AAMH,GAPQ,EAON,CAACT,GAAD,CAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKK,OAAO,CAACM,MAAR,GAAiB,CAAjB,gBAEA;AAAA,iBACKC,OAAO,CAACC,GAAR,CAAYR,OAAZ,CADL,EAEID,SAAS,CAACC,OAAO,CAAC,CAAD,CAAP,CAAWL,GAAX,CAAec,OAAf,CAAuB,SAAvB,EAAkC,WAAlC,IAAiD,cAAlD,EAAkE,KAAlE,CAFb,EAIIT,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,4BACA;AAAA,iCACI;AAAA,sBAAKD,MAAM,CAACA,MAAP,CAAcE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAGS,OAJZ,CAJJ,eASO;AAAQ,QAAA,OAAO,EAAIb,SAAS,CAACC,OAAO,CAAC,CAAD,CAAP,CAAWL,GAAX,CAAec,OAAf,CAAuB,SAAvB,EAAkC,WAAlC,IAAiD,cAAlD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,gBAgBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAqBI;AAAQ,MAAA,OAAO,EAAKX,QAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,IAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CArCD;;GAAMJ,O;;KAAAA,O;AAwCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Commits = ({ url, user, repo, getReady, getReady2 }) => {\n    const [commits, setCommits] = useState('')\n\n    useEffect(() => {\n        (async() => {\n            const result = await fetch(url)\n\t        const repos = await result.json()\n            \n            setCommits(repos)\n        })()\n    }, [url])\n\n    return(\n        <div>\n            <h3>Los commits son:</h3>\n           \n            {commits.length > 0 ? \n            \n            (<div >\n                { console.log(commits)}\n                {getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\", false)}\n\n                {commits.map((commit, index) => {\n                    return (\n                    <div key = { index }>\n                        <h4>{commit.commit.message}</h4>\n                    </div> )})}\n                    <button onClick= { getReady2(commits[0].url.replace('commits', 'git/trees') + \"?recursive=1\") } >See commits!</button>\n            </div> \n            \n            )\n            :\n            <p>El usuario no tiene repositorios</p>\n            }\n            <button onClick = { getReady(\"\", \"\", true)}>Back</button>\n        </div>\n    )\n}\n\n\nexport default Commits"]},"metadata":{},"sourceType":"module"}